[{"path":"https://andreweatherman.github.io/gtUtils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 gtUtils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/articles/border_bars.html","id":"team-reports","dir":"Articles","previous_headings":"","what":"Team Reports","title":"Border Bars","text":"’m basketball guy heart. lot visualization work concerns college basketball – let’s create 2024 metric recap Duke, alma mater, using gt_border_bars_top. data, ’re going use {cbbdata} package. purpose vignette show quick uses function, ’re going skip discussion around processing data. Let’s define metrics care whether higher value better. ’re going plot national percentiles location split (home vs. away). Let’s get data: ’s quick function take data calculate percentiles using dplyr. ’re going pivot data long format later use. Now, let’s calculate percentiles split combine data. need pivot final result wide format can plot home away columns. final processing, need two things: ) add general “group” stat b) rename stat something readable: Awesome! Now data. Let’s throw gt. create row groups gt, remember pass data grouped category. table, using several functions gtUtils: gt_theme_savant theme clean look gt_color_pills fill two percentile columns. Notice formatting percent trimming one digit. also set domain, [0, 1], pass palette. gt_538_caption include information bottom table. said, gt_border_bars_top function really care . keep theming, using solid black border. passing link dark-mode Duke logo. need play around bar_height include image. default, function pick-font family theme uses table headers. can also mess around text_padding, can switch image/text positions using text_align img_align. really quick example. can easily get something descriptive additional time effort.","code":"stats_to_consider <- c(   \"team\", \"barthag\", \"adj_o\", \"adj_d\", \"adj_t\", \"efg\", \"def_efg\", \"ftr\", \"def_ftr\",   \"oreb_rate\", \"dreb_rate\", \"tov_rate\", \"def_tov_rate\",   \"two_pt_pct\", \"three_pt_pct\", \"ft_pct\", \"def_two_pt_pct\",   \"def_three_pt_pct\", \"def_ft_pct\" )  higher_better <- c(   \"barthag\", \"adj_o\", \"adj_t\", \"efg\", \"ftr\", \"oreb_rate\", \"def_tov_rate\",   \"two_pt_pct\", \"three_pt_pct\", \"ft_pct\" ) home_splits <- cbd_torvik_team_factors(venue = \"home\", year = 2024) %>%   select(all_of(stats_to_consider))  away_splits <- cbd_torvik_team_factors(venue = \"away\", year = 2024) %>%   select(all_of(stats_to_consider)) calculate_percentiles <- function(data, location) {   data %>%     mutate(across(all_of(higher_better), ~percent_rank(.x)),            across(setdiff(stats_to_consider, c(\"team\", higher_better)), ~percent_rank(-.x))) %>%     pivot_longer(-team, names_to = \"stat\", values_to = \"percentile\") %>%     mutate(location = location) } home_percentiles <- calculate_percentiles(home_splits, \"home\") away_percentiles <- calculate_percentiles(away_splits, \"away\")  final_data <- bind_rows(home_percentiles, away_percentiles) %>%   pivot_wider(names_from = location, values_from = percentile) dict <- data.frame(   stat = unique(final_data$stat),   new_name = c(\"Barthag\", \"Adj. Off\", \"Adj. Def\", \"Adj. Tempo\", \"Eff. FG%\", \"Eff. FG%\",                \"FTA per FGA\", \"FTA per FGA\", \"Off. Rebound Rate\", \"Def. Rebound Rate\",                \"Turnover Rate\", \"Turnover Rate\", \"2FG%\", \"3FG%\", \"FT%\", \"2FG%\", \"3FG%\", \"FT%\") ) %>% deframe()  final_data <- final_data %>%   filter(team == \"Duke\") %>%   mutate(     stat_group = case_when(       stat %in% c(\"barthag\", \"adj_o\", \"adj_d\", \"adj_t\") ~ \"Metrics\",       stat %in% c(\"efg\", \"ftr\", \"oreb_rate\", \"tov_rate\") ~ \"Offensive Four Factors\",       stat %in% c(\"def_efg\", \"def_ftr\", \"dreb_rate\", \"def_tov_rate\") ~ \"Defensive Four Factors\",       stat %in% c(\"two_pt_pct\", \"three_pt_pct\", \"ft_pct\") ~ \"Offensive Shooting\",       .default = \"Defensive Shooting\"     ),     stat = dict[stat]   ) final_data %>%   group_by(stat_group) %>%   gt() %>%   cols_hide(team) %>%   gt_theme_savant() %>%   gt_color_pills(home,     domain = c(0, 1), format_type = \"percent\", digits = 1,     palette = \"ggsci::green_material\"   ) %>%   gt_color_pills(away,     domain = c(0, 1), format_type = \"percent\", digits = 1,     palette = \"ggsci::green_material\"   ) %>%   gt_538_caption(\"Data pulled using {cbbdata} from Barttorvik\", \"Viz. by @andreweatherman for a {gtUtils} vignette\") %>%   cols_width(home:away ~ px(90)) %>%   cols_label(stat = \"\", home = \"At Home\", away = \"On Road\") %>%   cols_align(columns = -stat, \"center\") %>%   tab_style(locations = cells_body(columns = -stat), cell_text(weight = \"bold\")) %>%   tab_options(column_labels.border.top.style = \"none\") %>%   gt_border_bars_top(     colors = \"black\",     img = \"https://a.espncdn.com/i/teamlogos/ncaa/500-dark/150.png\",     text = \"2024 Recap: Duke\",     text_padding = 10,     text_size = 20,     img_width = 40,     img_height = 40,     bar_height = 60   )"},{"path":"https://andreweatherman.github.io/gtUtils/articles/border_bars.html","id":"table-footers","dir":"Articles","previous_headings":"","what":"Table Footers","title":"Border Bars","text":"Another possibility using gt_border_bars_bottom include company personal logo. example, let’s pull TidyTuesday dataset Rolling Stone’s “500 Greatest Albums” pull top 15. , really quick small example. table pretty basic. use gt_theme_sofa light mode, throw row striping, include top bottom bars. bottom bar, add source text, push 12px size, toss normal weight. image placed bottom clearer, ’s nothing can . stretch 100px wide 30px tall. fewer 20 lines code, decent start table!","code":"data <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-05-07/rolling_stone.csv\") %>%    slice_min(rank_2020, n = 15) data %>%   mutate(album = paste0(rank_2020, \". \", album, \" (\", release_year, \")\")) %>%   select(c(album, artist = clean_name, gender = artist_gender, genre)) %>%   gt(id = \"table\") %>%   gt_theme_sofa() %>%   sub_missing() %>%   cols_align(columns = \"artist\", \"left\") %>%   opt_all_caps() %>%   opt_row_striping() %>%   gt_border_bars_bottom(\"#1c2632\",     bar_height = 25,     img = \"https://www.sxsw.com/wp-content/uploads/2022/11/RollingStone-BW.png\",     text = \"Data pulled from Tidy Tuesday\",     img_width = 100, img_height = 30, text_size = 12, text_weight = \"normal\"   ) %>%   gt_border_bars_top(\"#1c2632\", bar_height = 5) %>%   tab_header(     title = \"The 15 Greatest Albums of All Time\",     subtitle = md(\"Surveying the 2020 Rolling Stone's *500 Greatest Albums List*\")   )"},{"path":"https://andreweatherman.github.io/gtUtils/articles/border_bars.html","id":"just-for-fun","dir":"Articles","previous_headings":"","what":"Just for fun","title":"Border Bars","text":"Another use functions add pizzazz table. gt_border_bars, don’t need add text image! Let’s whip quick example place bars bottom fun. specify text image, can many bars ’d like – placed equal heights. plotted sequential order, meaning first color vector placed top last color bottom.","code":"data <- withr::with_seed(   seed = 10,   {     nycflights13::flights %>%        slice_sample(n = 15) %>%        select(1:8)   } )  data %>%    gt() %>%    gt_theme_gtutils() %>%    tab_header(\"Example Title\", \"Example Subtitle\") %>%    gt_border_bars_bottom(c(\"#EDBD68\", \"#F2704E\", \"#DE5152\", \"#A43845\", \"#602B53\"))"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"coloring-cells-with-pills","dir":"Articles","previous_headings":"","what":"Coloring cells with pills","title":"General Uses","text":"section showcases use gt_color_pills function gtUtils package style cells rounded color “pills” table. function inspired similar features gtExtras package Thomas Mock adds customizable elements formatting color control.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"basic-usage","dir":"Articles","previous_headings":"Coloring cells with pills","what":"Basic Usage","title":"General Uses","text":"simplest way use gt_color_pills apply column gt table. default, color cells continuous scale.","code":"mtcars %>%    head() %>%    gt() %>%    gt_theme_sofa() %>%    gt_color_pills(mpg)"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"trimming-digits","dir":"Articles","previous_headings":"Coloring cells with pills","what":"Trimming Digits","title":"General Uses","text":"can control number decimal places displayed using digits argument. example, trim values one decimal place:","code":"mtcars %>%    head() %>%    gt() %>%    gt_color_pills(mpg, digits = 1)"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"coloring-ordinal-ranks","dir":"Articles","previous_headings":"Coloring cells with pills","what":"Coloring ordinal ranks","title":"General Uses","text":"default, gt_color_pills applies continuous color scale based range data. However, can also color based ordinal ranks within column setting fill_type “rank”. Additionally, use rank_order specify whether highest lowest value ranked first (“desc” “asc”, defaults descending order).  example, new outlier (1 mpg) doesn’t skew coloring values continuous scale, higher values compressed upper part range (green).","code":"mtcars %>%    head() %>%    add_row(mpg = 1) %>%    gt() %>%    gt_color_pills(mpg, fill_type = \"rank\", rank_order = \"asc\")"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"formatting-options","dir":"Articles","previous_headings":"Coloring cells with pills","what":"Formatting Options","title":"General Uses","text":"gt_color_pills supports several value formats: number, comma, currency, percent. default “number,” can specify desired format using format_type argument.  can also append custom suffix formatted values, adding “mpg” miles per gallon:","code":"mtcars %>%   select(1:4) %>%    head() %>%    mutate(cyl = cyl * 10e4) %>%    gt() %>%    gt_color_pills(mpg) %>%    gt_color_pills(cyl, format = \"comma\") %>%    gt_color_pills(disp, format = \"currency\") %>%    gt_color_pills(hp, format = \"percent\", scale_percent = FALSE) mtcars %>%    head() %>%    gt() %>%    gt_color_pills(mpg, suffix = \" mpg\", digits = 1)"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"dynamic-pill-widths-and-height","dir":"Articles","previous_headings":"Coloring cells with pills","what":"Dynamic Pill Widths and Height","title":"General Uses","text":"width pills column dynamically adjusts longest value column, 3px padding side. can also control height pills using pill_height argument. default, set 25px, can increase decrease needed.","code":"mtcars %>%    head() %>%    gt() %>%    gt_color_pills(mpg, digits = 1, pill_height = 40)"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"automatic-text-color-for-contrast","dir":"Articles","previous_headings":"Coloring cells with pills","what":"Automatic Text Color for Contrast","title":"General Uses","text":"gt_color_pills automatically adjusts text color inside pill using gt:::ideal_fgnd_color ensure readability. example, palette ranging white black, function ensures text color changes appropriately:","code":"mtcars %>%    head() %>%    gt() %>%    gt_color_pills(mpg, digits = 1, palette = c(\"#ffffff\", \"#000000\"))"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"adding-borders-to-pills","dir":"Articles","previous_headings":"Coloring cells with pills","what":"Adding Borders to Pills","title":"General Uses","text":"can customize pills adding borders using outline_color outline_width arguments. example, setting red border 2px width:","code":"mtcars %>%    head() %>%    gt() %>%    gt_color_pills(mpg, digits = 1, outline_color = \"red\", outline_width = 2, palette = c(\"#ffffff\", \"#000000\"))"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"colored-indicator-boxes","dir":"Articles","previous_headings":"","what":"Colored indicator boxes","title":"General Uses","text":"gt_indicator_boxes function adds colored boxes gt table, allowing visually represent indicator values. function lets define rule qualifies “yes” “” value, choose custom colors, decide whether show text within boxes. function inspired article published New York Times. Prior making package, recreated original table using {gt} custom HTML. similar process used gt_indicator_boxes. general, data passed gt using gt_indicator_boxes wide format look something like :","code":"set.seed(123) sample_data <- tibble::tibble(   id = 1:10,   replicate(7, sample(c(0, 1, NA), 10, replace = TRUE), simplify = FALSE) %>%     setNames(paste0(\"indicator_\", 1:7)) %>%     as_tibble() )"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"basic-usage-1","dir":"Articles","previous_headings":"Colored indicator boxes","what":"Basic Usage","title":"General Uses","text":"default, gt_indicator_boxes colors cells 1 “yes” (colored) 0 NA “” (uncolored). , apply function columns except id, serves key column.","code":"sample_data %>%    gt() %>%    gt_indicator_boxes(key_columns = \"id\")"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"changing-indicator-values","dir":"Articles","previous_headings":"Colored indicator boxes","what":"Changing Indicator Values","title":"General Uses","text":"0-1 indicator defaults customizable using indicator_vals argument. can specify values define considered “yes” “.” example, data uses 5 represent “yes” 0 “,” can set indicator_vals = c(0, 5):","code":"set.seed(123) data.frame(   val_1 = sample(c(0, 5), 10, replace = TRUE),   val_2 = sample(c(0, 5), 10, replace = TRUE) ) %>%    gt() %>%    gt_indicator_boxes(key_columns = \"id\", indicator_vals = c(0, 5))"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"showing-text-inside-the-boxes","dir":"Articles","previous_headings":"Colored indicator boxes","what":"Showing Text Inside the Boxes","title":"General Uses","text":"can choose display text inside indicator boxes setting show_text = TRUE. useful want numeric values visible within color indicators.  default, NA values hidden using show_text. However, can choose display NA values explicitly setting show_na_as_na = TRUE.","code":"sample_data %>%    gt() %>%    gt_indicator_boxes(key_columns = \"id\", show_text = TRUE) sample_data %>%    gt() %>%    gt_indicator_boxes(key_columns = \"id\", show_text = TRUE, show_na_as_na = TRUE)"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"controlling-which-text-is-shown","dir":"Articles","previous_headings":"Colored indicator boxes","what":"Controlling Which Text is Shown","title":"General Uses","text":"show_only argument allows display text specific values. can choose display text “yes” (show_only = “yes”), “” (show_only = “”), NA values (show_only = “NA”). ’s example show text “yes” values:","code":"sample_data %>%    gt() %>%    gt_indicator_boxes(key_columns = \"id\", show_text = TRUE, show_only = \"yes\")"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"customizing-colors","dir":"Articles","previous_headings":"Colored indicator boxes","what":"Customizing Colors","title":"General Uses","text":"gt_indicator_boxes function allows full control colors used “yes,” “,” NA values. , set “yes” values green “” values grey. default, NA values inherit color associated “,” can set unique color NAs.","code":"sample_data %>%    gt() %>%    gt_indicator_boxes(key_columns = \"id\", color_yes = \"#28a745\", color_no = \"#f5f5f5\", color_na = \"#f39c12\")"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"adding-borders-to-boxes","dir":"Articles","previous_headings":"Colored indicator boxes","what":"Adding Borders to Boxes","title":"General Uses","text":"can also add borders around indicator boxes using border_color border_width arguments. especially useful using themes non-white table backgrounds, helps boxes stand clearly. default, border applied, can specify color adjust width needed. ’s example add black borders width 0.5px using gt_theme_sofa.","code":"sample_data %>%    gt() %>%    gt_theme_sofa() %>%    gt_indicator_boxes(key_columns = \"id\", border_color = \"black\", border_width = 0.5)"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"using-custom-functions-for-indicators","dir":"Articles","previous_headings":"Colored indicator boxes","what":"Using Custom Functions for Indicators","title":"General Uses","text":"gt_indicator_boxes function highly flexible, allowing apply custom logic determining box colored. particularly useful “yes” “” status simply based binary values follows complex rules. Let’s create spoof sales dataset multiple indicators different metrics. ’ll use custom function define whether box colored based thresholds metric. scenario, want define custom rules metric: Sales: “yes” indicator sales greater 150. Customer Satisfaction: “yes” indicator satisfaction score greater 0.75. Defect Rate: “yes” indicator defect rate less 0.05. Return Rate: “yes” indicator return rate less 0.10.","code":"set.seed(123) product_data <- tibble::tibble(   product_id = 1:10,   sales = runif(10, min = 50, max = 200),    customer_satisfaction = runif(10, min = 0.5, max = 1),   defect_rate = runif(10, min = 0, max = 0.1),   return_rate = runif(10, min = 0, max = 0.2) ) custom_indicator_function <- function(x, column_name) {   case_when(     column_name == \"sales\" ~ x > 150,     column_name == \"customer_satisfaction\" ~ x > 0.75,     column_name == \"defect_rate\" ~ x < 0.05,     column_name == \"return_rate\" ~ x < 0.10,     TRUE ~ NA_real_   ) }  product_data %>%   gt() %>%   gt_indicator_boxes(     key_columns = \"product_id\",     indicator_rule = custom_indicator_function,     color_yes = \"#4CAF50\",       color_no = \"#FF5722\"   )"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"captions","dir":"Articles","previous_headings":"","what":"538 Captions","title":"General Uses","text":"One favorite table formats ever footnote + caption combination old FiveThirtyEight tables. think just looks clean. recreated blog post, now feature baked gtUtils gt_538_caption function. function created, recommended add additional footnotes ’re including table. function takes two arguments: top_caption bottom_caption. top caption aligned left, bottom caption aligned right. top caption essentially footnote – can edit formatting targetting location – bottom caption source note. line separating two color footnote text.  example, let’s adjust bottom text making larger bold.","code":"nycflights13::flights %>%    slice_sample(n = 5) %>%    select(1:8) %>%    gt(id = \"table\") %>%    gt_theme_savant() %>%    gt_538_caption(\"Top of gt_538_caption\", \"Bottom of caption\") %>%    tab_header(\"Sample table\") nycflights13::flights %>%    slice_sample(n = 5) %>%    select(1:8) %>%    gt(id = \"table\") %>%    gt_theme_savant() %>%    gt_538_caption(\"Top of gt_538_caption\", \"Larger and bolder\") %>%    tab_style(locations = cells_source_notes(), cell_text(weight = \"bold\", size = px(16))) %>%    tab_header(\"Sample table\")"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"boxes-for-legends","dir":"Articles","previous_headings":"","what":"Boxes for legends","title":"General Uses","text":"gt_centered_legend function allows create centered title, subtitle, key legend gt table. can specify whether legend labels appear inside outside colored boxes. need pass legend tibble corresponding color label entries, like :  can also place labels inside colored boxes setting label_placement = \"inside\". helpful space limited want labels integrated color indicators.","code":"key_info <- tibble::tibble(   color = c(\"#FCCF10\", \"#EEEEEE\"),   label = c(\"Yes\", \"No\") )  sample_data %>%   select(1:3) %>%    gt() %>%   gt_theme_savant() %>%    gt_indicator_boxes(key_columns = \"id\") %>%    gt_centered_legend(     key_info = key_info,     heading = \"Sample title\",     subtitle = \"Sample subtitle\",     label_placement = \"outside\"   ) key_info <- tibble::tibble(   color = c(\"#FCCF10\", \"#EEEEEE\"),   label = c(\"Yes\", \"No\") )  sample_data %>%   select(1:3) %>%    gt() %>%   gt_theme_savant() %>%    gt_indicator_boxes(key_columns = \"id\") %>%    gt_centered_legend(     key_info = key_info,     heading = \"Sample title\",     subtitle = \"Sample subtitle\",     label_placement = \"inside\"   )"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"stacked-column-headers","dir":"Articles","previous_headings":"","what":"Stacked column headers","title":"General Uses","text":"gt_column_subheaders function allows create stacked column headers customizable subtitles gt table. useful displaying extra context explanations main column headers.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"basic-usage-2","dir":"Articles","previous_headings":"Stacked column headers","what":"Basic Usage","title":"General Uses","text":"’s simple example add custom headings subtitles two columns: mpg hp using mtcars dataset.","code":"mtcars %>%   head() %>%   select(mpg, hp) %>%    gt() %>%   gt_theme_savant() %>%    gt_column_subheaders(     mpg = list(heading = \"Miles per Gallon\", subtitle = \"Fuel Efficiency\"),     hp = list(heading = \"Horsepower\", subtitle = \"Power Output\"),     heading_color = \"black\",     subtitle_color = \"gray\"   )"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"customizing-headings-and-subtitles","dir":"Articles","previous_headings":"Stacked column headers","what":"Customizing Headings and Subtitles","title":"General Uses","text":"can easily customize colors font weights main headings subtitles using heading_color, subtitle_color, heading_weight, subtitle_weight arguments. instance, ’s can apply different colors font styles:","code":"mtcars %>%   head() %>%   select(mpg, hp) %>%    gt() %>%   gt_theme_savant() %>%    gt_column_subheaders(     mpg = list(heading = \"Miles per Gallon\", subtitle = \"Fuel Efficiency\"),     hp = list(heading = \"Horsepower\", subtitle = \"Power Output\"),     heading_color = \"darkred\",     subtitle_color = \"black\",     heading_weight = \"normal\",     subtitle_weight = \"lighter\"   )"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"stacking-multiple-tables","dir":"Articles","previous_headings":"","what":"Stacking multiple tables","title":"General Uses","text":"gt_stack_tables function allows vertically stack multiple gt tables single output. particularly useful want display save multiple tables one continuous view, e.g. game box score. example, let’s define three sample tables. first table, ’re going include table header subheader. final table, ’re going include caption. ’re going include annotations final table. using gt_stack_tables, simply pass tables list:","code":"tab1 <- nycflights13::flights %>%    select(2:8) %>%    slice_sample(n = 5) %>%    gt() %>%    gt_theme_kenpom() %>%    tab_header(\"Stacked Tables\", \"An example using gt_stack_tables\")  tab2 <- nycflights13::flights %>%    select(2:8) %>%    slice_sample(n = 5) %>%    gt() %>%    gt_theme_kenpom()  tab3 <- nycflights13::flights %>%    select(2:8) %>%    slice_sample(n = 5) %>%    gt() %>%    gt_theme_kenpom() %>%    gt_538_caption(\"You can include a caption on the bottom table\", \"Lower captions too\") gt_stack_tables(list(tab1, tab2, tab3))"},{"path":"https://andreweatherman.github.io/gtUtils/articles/general_uses.html","id":"saving-and-cropping-tables","dir":"Articles","previous_headings":"","what":"Saving and cropping tables","title":"General Uses","text":"One useful features creating polished, ready--share tables gt_save_crop function. function saves table image also trims excess whitespace. ’s particularly useful want save version table use social media, etc. Behind scenes, gt_save_crop leverages gtsave_extra gtExtras package – uses webshot2 – passes temporary save table magick. , magick automatically crop table even whitespace widths sides. bg argument controls color background added around table. default, ’s set “white”, can specify valid color. using theme gtUtils unsure background color use, can reference theme’s background color using gtUtils::theme_bg ensure consistency across tables. tables site, bar top vignette, saved function.","code":"mtcars %>%   head() %>%   gt() %>%   gt_save_crop(file = \"cropped_table.png\", whitespace = 40, bg = \"white\")"},{"path":"https://andreweatherman.github.io/gtUtils/articles/tier_list.html","id":"basic-tier-list","dir":"Articles","previous_headings":"","what":"Basic Tier List","title":"Creating Tier Lists","text":"example, using data fetched {cbbdata} package. conveniance, data pushed gist easy extraction.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/articles/tier_list.html","id":"processing","dir":"Articles","previous_headings":"Basic Tier List","what":"Processing","title":"Creating Tier Lists","text":"’re interested pull data cbbdata: First, let’s fetch data form GitHub. need establish tiers colors. example, going use three distinct categories use traditional tier list background colors. Next, need bin data tiers. subset_rank uses dense_rank function assign ordinal ranks based column interest – adjusted efficiency margin. Next, use cut function divide ranks distinct tiers based quantiles, specifying breaks 25th 75th percentiles. means data split three groups, lower 25% one tier, middle 50% another, upper 25% final tier. levels argument provides custom labels tier – referencing levels vector – include.lowest = TRUE ensures lowest rank included first tier. Finally, tier_order calculated rank within tier using dense_rank , time grouped tier ensure ordering relative group. can use cbbdata grab team logos join onto data. Importantly, going use dark table theme, need grab dark mode logos. Finally, need pivot data wide format. ensures plotting logos horizontally. Great – data looks similar , ’re ready make tier list!","code":"cbd_kenpom_ratings(year = 2024, conf = \"ACC\") %>% select(team, adj_em) data <- read_csv(\"https://gist.github.com/andreweatherman/a8aaa6057e9858cd11c3327fc32df5bb/raw/3a54e221ae529dc8a2f37077770d7fb1b573b2c9/gtUtils_example_tier_list.csv\") levels <- c(\"Elite\", \"Average\", \"Poor\") colors <- c(\"#FF7F7F\", \"#FFDF7F\", \"#BFFF7F\") data <- data %>%    mutate(subset_rank = dense_rank(-adj_em),          tier = cut(subset_rank,                       breaks = quantile(subset_rank, probs = c(0, 0.25, 0.75, 1)),                       labels = levels,                       include.lowest = TRUE)) %>%    mutate(tier_order = dense_rank(subset_rank), .by = tier) data <- data %>% left_join(cbd_teams() %>% select(team = common_team, logo = espn_dark_logo)) data <- data %>%      pivot_wider(id_cols = tier, names_from = tier_order, values_from = logo) %>%      select(tier, sort(names(.))) %>%      arrange(tier)"},{"path":"https://andreweatherman.github.io/gtUtils/articles/tier_list.html","id":"plotting","dir":"Articles","previous_headings":"Basic Tier List","what":"Plotting","title":"Creating Tier Lists","text":"gt_tiers things hood: - renders images links - applies gt_theme_tier function using “dark” mode default - forces column labels blank Let’s apply !  done! ’ve created tier list gt using gtUtils. gtUtils v0.1, tier list function somewhat limited: ) supports image cells b) “wrap” logos condense width (can play around image_height ).","code":"data %>%   gt() %>%    gt_tiers(levels, colors) %>%    tab_header(title = \"Example Tier List using gtUtils\",             subtitle = \"Ranking ACC teams by 2024 KenPom rating\")"},{"path":"https://andreweatherman.github.io/gtUtils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Weatherman. Author, maintainer.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Weatherman (2024). gtUtils: Enhancements Utilities gt Package. R package version 0.1.0, https://andreweatherman.github.io/gtUtils/, https://gtutils.aweatherman.com/.","code":"@Manual{,   title = {gtUtils: Enhancements and Utilities for the gt Package},   author = {Andrew Weatherman},   year = {2024},   note = {R package version 0.1.0, https://andreweatherman.github.io/gtUtils/},   url = {https://gtutils.aweatherman.com/}, }"},{"path":"https://andreweatherman.github.io/gtUtils/index.html","id":"gtutils","dir":"","previous_headings":"","what":"gtUtils R Package","title":"gtUtils R Package","text":"gtUtils collection themes, coloring functions, utilities enhance extend functionality gt package creating beautiful tables R. ’re looking gt content, check blog – featuring visualization walkthroughs source code!","code":""},{"path":"https://andreweatherman.github.io/gtUtils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"gtUtils R Package","text":"can install development version gtUtils GitHub:","code":"remotes::install_github(\"andreweatherman/gtUtils\")"},{"path":"https://andreweatherman.github.io/gtUtils/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"gtUtils R Package","text":"get started, please references vignettes : General Uses Table Themes Border Bars Stuff Creating Tier Lists","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_538_caption.html","id":null,"dir":"Reference","previous_headings":"","what":"538 Caption Theme — gt_538_caption","title":"538 Caption Theme — gt_538_caption","text":"Adds top-line caption table line underneath like 538 tables. top_caption rendered footnote, bottom_caption rendered source note markdown support.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_538_caption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"538 Caption Theme — gt_538_caption","text":"","code":"gt_538_caption(gt_object, top_caption, bottom_caption = NULL, ...)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_538_caption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"538 Caption Theme — gt_538_caption","text":"gt_object existing gt table object class gt_tbl. top_caption caption render footnote (can markdown). bottom_caption caption render source note (can markdown). ... Optional additional arguments gt::table_options().","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_538_caption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"538 Caption Theme — gt_538_caption","text":"gt_tbl styled captions","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_bold_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Bold rows in a GT table with optional filtering and highlighting — gt_bold_rows","title":"Bold rows in a GT table with optional filtering and highlighting — gt_bold_rows","text":"gt_bold_rows applies bold styling rows GT table. can specify rows bold filter statement default, rows bolded. also option change text color add background highlight color bolded rows.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_bold_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bold rows in a GT table with optional filtering and highlighting — gt_bold_rows","text":"","code":"gt_bold_rows(   gt_object,   row = NULL,   text_color = \"black\",   highlight_color = NULL,   filter_statement = NULL )"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_bold_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bold rows in a GT table with optional filtering and highlighting — gt_bold_rows","text":"gt_object GT table object. row vector row indices bold, default rows. text_color color used text, default 'black'. highlight_color color used row background highlight, default 'white'. NULL, background color applied. filter_statement character string contains filter expression evaluated determine rows bold. valid R expression string, example, \"column_name > 5\". Default NULL, means filter applied.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_bold_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bold rows in a GT table with optional filtering and highlighting — gt_bold_rows","text":"GT table object specified rows styled bold text, optionally changed text color background highlight.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_bars_bottom.html","id":null,"dir":"Reference","previous_headings":"","what":"Add horizontal bars with optional image, text, and Google Font to the bottom of a gt table — gt_border_bars_bottom","title":"Add horizontal bars with optional image, text, and Google Font to the bottom of a gt table — gt_border_bars_bottom","text":"function adds row horizontal bars bottom gt table, using character vector hex color codes. bars added source note customizable height, width, alignment, image size, text formatting, image/text alignment. image text provided, one color used, bar contain image /text. function automatically inherits font gt object uses corresponding Google Font text rendered bar.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_bars_bottom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add horizontal bars with optional image, text, and Google Font to the bottom of a gt table — gt_border_bars_bottom","text":"","code":"gt_border_bars_bottom(   gt_object,   colors,   bar_height = 10,   bar_width = \"100%\",   bar_align = \"center\",   img = NULL,   img_width = 30,   img_height = 30,   img_padding = 10,   img_align = \"right\",   text = NULL,   text_weight = \"bold\",   text_color = \"#FFFFFF\",   text_size = 18,   text_align = \"left\",   text_padding = 10 )"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_bars_bottom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add horizontal bars with optional image, text, and Google Font to the bottom of a gt table — gt_border_bars_bottom","text":"gt_object gt table object. colors character vector hex color codes bars. bar_height height bars pixels. Default 10px. bar_width width bars percentage. Default 100%. bar_align Alignment bars bar_width 100%. Options 'left', 'center', 'right'. Default 'center'. img URL image render bar (optional). img_width width image pixels. Default 30px. img_height height image pixels. Default 30px. img_padding Padding around image ensure touching edges. Default 10px. img_align Alignment image within bar ('left', 'center', 'right'). Default 'right'. text Optional text display bar. text_weight Font weight text. Default 'bold' emphasis. text_color Color text. Default '#FFFFFF' (white). text_size Font size text. Default 18px. text_align Alignment text within bar ('left', 'center', 'right'). Default 'left'. text_padding Padding around text ensure touching edges. Default 10px.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_bars_bottom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add horizontal bars with optional image, text, and Google Font to the bottom of a gt table — gt_border_bars_bottom","text":"gt table row horizontal bars bottom.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_bars_top.html","id":null,"dir":"Reference","previous_headings":"","what":"Add horizontal bars with optional image, text, and Google Font to the top of a gt table — gt_border_bars_top","title":"Add horizontal bars with optional image, text, and Google Font to the top of a gt table — gt_border_bars_top","text":"function adds row horizontal bars top gt table, using character vector hex color codes. bars added caption customizable height, width, alignment, image size, text formatting, image/text alignment. image text provided, one color used, bar contain image /text. function automatically inherits font gt object uses corresponding Google Font text rendered bar.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_bars_top.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add horizontal bars with optional image, text, and Google Font to the top of a gt table — gt_border_bars_top","text":"","code":"gt_border_bars_top(   gt_object,   colors,   bar_height = 10,   bar_width = \"100%\",   bar_align = \"center\",   img = NULL,   img_width = 30,   img_height = 30,   img_padding = 10,   img_align = \"right\",   text = NULL,   text_weight = \"bold\",   text_color = \"#FFFFFF\",   text_size = 18,   text_align = \"left\",   text_padding = 10 )"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_bars_top.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add horizontal bars with optional image, text, and Google Font to the top of a gt table — gt_border_bars_top","text":"gt_object gt table object. colors character vector hex color codes bars. bar_height height bars pixels. Default 10px. bar_width width bars percentage. Default 100%. bar_align Alignment bars bar_width 100%. Options 'left', 'center', 'right'. Default 'center'. img URL image render bar (optional). img_width width image pixels. Default 30px. img_height height image pixels. Default 30px. img_padding Padding around image ensure touching edges. Default 10px. img_align Alignment image within bar ('left', 'center', 'right'). Default 'right'. text Optional text display bar. text_weight Font weight text. Default 'bold' emphasis. text_color Color text. Default '#FFFFFF' (white). text_size Font size text. Default 18px. text_align Alignment text within bar ('left', 'center', 'right'). Default 'left'. text_padding Padding around text ensure touching edges. Default 10px.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_bars_top.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add horizontal bars with optional image, text, and Google Font to the top of a gt table — gt_border_bars_top","text":"gt table row horizontal bars top.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a border grid to a gt table — gt_border_grid","title":"Add a border grid to a gt table — gt_border_grid","text":"function adds column row borders gt table, creating grid-like appearance. can optionally include borders column row labels.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a border grid to a gt table — gt_border_grid","text":"","code":"gt_border_grid(gt_object, color = \"black\", weight = 1, include_labels = FALSE)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a border grid to a gt table — gt_border_grid","text":"gt_object gt table object modify. color character string representing color borders (default \"black\"). weight numeric value specifying thickness borders pixels (default 1). include_labels Logical. Whether include borders around row column labels (default FALSE).","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a border grid to a gt table — gt_border_grid","text":"gt table object grid borders applied.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_border_grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a border grid to a gt table — gt_border_grid","text":"gt_border_grid function adds grid gt table applying column row borders. uses gt_add_divider function gtExtras add column borders applies custom CSS row borders. function also generates random table ID one provided.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_centered_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a centered title, subtitle, and legend to a gt table with customizable label placement — gt_centered_legend","title":"Add a centered title, subtitle, and legend to a gt table with customizable label placement — gt_centered_legend","text":"function adds centered title, subtitle, key legend top gt table. key/legend passed tibble containing colors labels. Labels can placed either inside outside color boxes.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_centered_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a centered title, subtitle, and legend to a gt table with customizable label placement — gt_centered_legend","text":"","code":"gt_centered_legend(   gt_table,   key_info,   heading = \"Centered Title\",   subtitle = \"Centered Subtitle\",   label_placement = \"outside\" )"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_centered_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a centered title, subtitle, and legend to a gt table with customizable label placement — gt_centered_legend","text":"gt_table gt table object modify. key_info tibble containing two columns: color (hex color codes) label (corresponding text labels). heading Character. main title text table. Defaults \"Centered Title\". subtitle Character. subtitle text table. Defaults \"Centered Subtitle\". label_placement Character. Either \"inside\" \"outside\", specifying whether labels inside outside color boxes. Defaults \"outside\".","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_centered_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a centered title, subtitle, and legend to a gt table with customizable label placement — gt_centered_legend","text":"Returns modified gt table centered title, subtitle, key.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_centered_legend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a centered title, subtitle, and legend to a gt table with customizable label placement — gt_centered_legend","text":"function creates centered title, subtitle, legend based provided key information (colors labels). label_placement \"inside\", labels placed inside colored boxes; \"outside\", placed next colored boxes.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_color_pills.html","id":null,"dir":"Reference","previous_headings":"","what":"Add color pills to a gt table column — gt_color_pills","title":"Add color pills to a gt table column — gt_color_pills","text":"function adds color pills specified column gt table, allowing column's values filled color based ordinal ranking continuous values. can provide custom domain palette, optional paletteer support.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_color_pills.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add color pills to a gt table column — gt_color_pills","text":"","code":"gt_color_pills(   gt_object,   columns,   palette = c(\"#C84630\", \"#5DA271\"),   fill_type = \"continuous\",   rank_order = \"desc\",   digits = NULL,   domain = NULL,   format_type = \"number\",   scale_percent = TRUE,   suffix = \"\",   reverse = FALSE,   outline_color = NULL,   outline_width = 0.25,   pal_type = \"discrete\",   pill_height = 25,   ... )"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_color_pills.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add color pills to a gt table column — gt_color_pills","text":"gt_object gt table object modify. columns column set columns within gt table apply color pills. palette color palette use. want use palette paletteer, specify palette package::palette. Defaults c(\"#C84630\", \"#5DA271\"). fill_type Character. Either \"rank\" \"continuous\", determining whether fill based ordinal rank continuous values. rank_order Character. Either \"asc\" \"desc\", used fill_type \"rank\". Defaults \"desc\". digits Integer. number decimal places round values . Defaults NULL. domain numeric vector specifying domain continuous color scaling. NULL, domain automatically determined data. Defaults NULL. format_type Character. format values column. Options \"number\", \"comma\", \"currency\", \"percent\". Defaults \"number\". scale_percent Logical. values scaled percent (multiplied 100)? Defaults TRUE. suffix Optional. character string append suffix formatted value (e.g., \"M\", \"K\", \"lbs\"). Defaults \"\". reverse Logical. color palette reversed? Defaults FALSE. outline_color Optional. hex color code border around pills. Defaults NULL. outline_width Numeric. width border around pills pixels. Defaults 0.25. pal_type Character. Either \"discrete\" \"continuous\", used applying paletteer palettes. Defaults \"discrete\". pill_height Numeric. height color pill pixels. Defaults 25. ... Additional arguments passed scales::col_numeric.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_color_pills.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add color pills to a gt table column — gt_color_pills","text":"Returns modified gt table color pills applied specified columns.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_color_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Color Rows in gt Table Based on Win/Loss Results — gt_color_results","title":"Color Rows in gt Table Based on Win/Loss Results — gt_color_results","text":"function styles rows gt table based win/loss results. allows customization colors text win loss rows. Users can specify column result data, customize colors, choose traditional win/loss binary result types.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_color_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color Rows in gt Table Based on Win/Loss Results — gt_color_results","text":"","code":"gt_color_results(   gt_object,   result_column = \"result\",   win_color = \"#5DA271\",   loss_color = \"#C84630\",   wins_text_color = \"white\",   loss_text_color = \"white\",   result_type = \"wl\" )"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_color_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color Rows in gt Table Based on Win/Loss Results — gt_color_results","text":"gt_object gt table object. result_column name column data contains result indicators. Default 'result'. win_color background color rows indicating win. Default '#5DA271' (green). loss_color background color rows indicating loss. Default '#C84630' (red). wins_text_color text color rows indicating win. Default 'white'. loss_text_color text color rows indicating loss. Default 'white'. result_type type result indicators used result_column. Options 'wl' (default, 'W' 'L') 'binary' (1 0).","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_color_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color Rows in gt Table Based on Win/Loss Results — gt_color_results","text":"gt table styled rows based win/loss results.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_column_subheaders.html","id":null,"dir":"Reference","previous_headings":"","what":"Add stacked column headers with subtitles to a gt table — gt_column_subheaders","title":"Add stacked column headers with subtitles to a gt table — gt_column_subheaders","text":"function creates stacked column headers gt table, column customizable main heading subtitle, along options set colors font weights heading subtitle.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_column_subheaders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add stacked column headers with subtitles to a gt table — gt_column_subheaders","text":"","code":"gt_column_subheaders(   gt_table,   heading_color = \"black\",   subtitle_color = \"#808080\",   heading_weight = \"bold\",   subtitle_weight = \"normal\",   ... )"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_column_subheaders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add stacked column headers with subtitles to a gt table — gt_column_subheaders","text":"gt_table gt table object modify. heading_color Character. Color main heading text. Defaults \"black\". subtitle_color Character. Color subtitle text. Defaults \"#808080\". heading_weight Character. Font weight main heading. Defaults \"bold\". subtitle_weight Character. Font weight subtitle. Defaults \"normal\". ... Named arguments name corresponds column gt table value list containing two elements: heading (main heading) subtitle (subtitle text). column included, use column name heading display non-breaking space (&nbsp;) subtitle.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_column_subheaders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add stacked column headers with subtitles to a gt table — gt_column_subheaders","text":"Returns modified gt table stacked headers subtitles.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_column_subheaders.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add stacked column headers with subtitles to a gt table — gt_column_subheaders","text":"function iterates columns gt table applies two-level header column: customizable main heading smaller, customizable subtitle. subtitle heading provided column, column name used heading default non-breaking space used subtitle.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_column_subheaders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add stacked column headers with subtitles to a gt table — gt_column_subheaders","text":"","code":"# mtcars %>% #   head() %>% #   gt() %>% #   gt_column_subheaders( #     mpg = list(heading = \"Top\", subtitle = \"Bottom\"), #     hp = list(heading = \"Horsepower\", subtitle = \"HP\"), #     heading_color = \"blue\", subtitle_color = \"gray\" #   )"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_indicator_boxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add colored indicator boxes to a gt table — gt_indicator_boxes","title":"Add colored indicator boxes to a gt table — gt_indicator_boxes","text":"function takes gt table adds colored boxes indicators specific columns. default, values columns assessed based indicator_vals argument, first value represents \"\" (uncolored) second value represents \"yes\" (colored). Users can also define custom rules using indicator_rule argument.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_indicator_boxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add colored indicator boxes to a gt table — gt_indicator_boxes","text":"","code":"gt_indicator_boxes(   gt_object,   key_columns = NULL,   indicator_vals = c(0, 1),   indicator_rule = function(x) x == indicator_vals[2],   color_yes = \"#FCCF10\",   color_no = \"#EEEEEE\",   show_na_as_na = FALSE,   show_text = FALSE,   show_only = NULL,   per_column_formats = NULL,   color_na = NULL,   border_color = NULL,   border_width = 0.25,   box_width = 20,   box_height = 20 )"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_indicator_boxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add colored indicator boxes to a gt table — gt_indicator_boxes","text":"gt_object gt table object. key_columns character vector column names transformed. Defaults NULL. indicator_vals numeric vector length 2 representing \"\" \"yes\" values (defaults c(0, 1)). indicator_rule function defines rule box colored. Defaults checking value equal indicator_vals[2]. color_yes character string representing color \"yes\" indicators (default \"#FCCF10\"). color_no character string representing color \"\" indicators (default \"#EEEEEE\"). show_na_as_na Logical. Whether display NA NA (without coloring). Defaults FALSE, treats NA \"\". show_text Logical. Whether display text inside indicator boxes. Defaults FALSE. show_only character string (\"yes\", \"\", \"NA\") indicating text shown \"yes\", \"\", \"NA\" values. Defaults NULL (text values shown). per_column_formats list key column name, value list formatting options (digits, format_type, suffix) column. color_na character string representing color NA indicators. provided, defaults color_no. border_color character string representing color border around boxes. Defaults NULL (border). border_width Numeric. width border pixels. Defaults 0.25. box_width Numeric. default width box pixels. Defaults 20. box_height Numeric. default height box pixels. Defaults 20.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_indicator_boxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add colored indicator boxes to a gt table — gt_indicator_boxes","text":"modified gt table specified columns replaced HTML display colored boxes.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_save_crop.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop gt tables — gt_save_crop","title":"Crop gt tables — gt_save_crop","text":"Programatically save crop gt tables using magick. Uses gtsave_extra save image magick crop .","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_save_crop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop gt tables — gt_save_crop","text":"","code":"gt_save_crop(   data,   file = NULL,   bg = \"white\",   whitespace = 50,   zoom = 2,   expand = 5 )"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_save_crop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop gt tables — gt_save_crop","text":"file valid path .png, .jpg, .jpeg crop bg background color added trimming (defaults white) whitespace numeric representing amount whitespace leave around image","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_save_crop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop gt tables — gt_save_crop","text":"Returns cropped image file","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_set_font.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Font Family for All Parts of a gt Table — gt_set_font","title":"Set Font Family for All Parts of a gt Table — gt_set_font","text":"function sets font family customizable parts gt table including title, table body, labels, label spanners, . convenience function want quickly apply font table.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_set_font.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Font Family for All Parts of a gt Table — gt_set_font","text":"","code":"gt_set_font(gt_table, font_family, from_google_font = TRUE)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_set_font.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Font Family for All Parts of a gt Table — gt_set_font","text":"gt_table gt table object. font_family font family apply entire table. from_goog_font font pulled Google Fonts (TRUE; default) local machine (FALSE)","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_set_font.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Font Family for All Parts of a gt Table — gt_set_font","text":"gt table specified font family applied customizable parts.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_stack_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack multiple gt tables — gt_stack_tables","title":"Stack multiple gt tables — gt_stack_tables","text":"function takes multiple gt tables stacks vertically single HTML output. stacked tables displayed viewer.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_stack_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack multiple gt tables — gt_stack_tables","text":"","code":"gt_stack_tables(tables = NULL)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_stack_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack multiple gt tables — gt_stack_tables","text":"tables list gt table objects stack.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_stack_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack multiple gt tables — gt_stack_tables","text":"Displays stacked tables viewer.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_stack_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stack multiple gt tables — gt_stack_tables","text":"function stacks multiple gt tables vertically single HTML block displays stacked tables viewer.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_athletic.html","id":null,"dir":"Reference","previous_headings":"","what":"The Athletic gt Table Theme — gt_theme_athletic","title":"The Athletic gt Table Theme — gt_theme_athletic","text":"Apply Athletic theme gt table","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_athletic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Athletic gt Table Theme — gt_theme_athletic","text":"","code":"gt_theme_athletic(gt_object, ...)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_athletic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Athletic gt Table Theme — gt_theme_athletic","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_athletic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Athletic gt Table Theme — gt_theme_athletic","text":"Returns styled gt table","code":""},{"path":[]},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_gtutils.html","id":null,"dir":"Reference","previous_headings":"","what":"The gtUtils gt Table Theme — gt_theme_gtutils","title":"The gtUtils gt Table Theme — gt_theme_gtutils","text":"Apply Athletic theme gt table","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_gtutils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The gtUtils gt Table Theme — gt_theme_gtutils","text":"","code":"gt_theme_gtutils(gt_object, ...)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_gtutils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The gtUtils gt Table Theme — gt_theme_gtutils","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_gtutils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The gtUtils gt Table Theme — gt_theme_gtutils","text":"Returns styled gt table","code":""},{"path":[]},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_kenpom.html","id":null,"dir":"Reference","previous_headings":"","what":"KenPom gt Table Theme — gt_theme_kenpom","title":"KenPom gt Table Theme — gt_theme_kenpom","text":"theme styling gt tables similar Athletic.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_kenpom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KenPom gt Table Theme — gt_theme_kenpom","text":"","code":"gt_theme_kenpom(gt_object, ...)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_kenpom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KenPom gt Table Theme — gt_theme_kenpom","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_kenpom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KenPom gt Table Theme — gt_theme_kenpom","text":"Returns data appended HTML column.","code":""},{"path":[]},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_ncaa.html","id":null,"dir":"Reference","previous_headings":"","what":"NCAA gt Table Theme — gt_theme_ncaa","title":"NCAA gt Table Theme — gt_theme_ncaa","text":"Apply NCAA theme gt table","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_ncaa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NCAA gt Table Theme — gt_theme_ncaa","text":"","code":"gt_theme_ncaa(gt_object, ...)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_ncaa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NCAA gt Table Theme — gt_theme_ncaa","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_ncaa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NCAA gt Table Theme — gt_theme_ncaa","text":"Returns styled gt table","code":""},{"path":[]},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_pl.html","id":null,"dir":"Reference","previous_headings":"","what":"Premier League gt Table Theme — gt_theme_pl","title":"Premier League gt Table Theme — gt_theme_pl","text":"Apply Premier League theme gt table","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_pl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Premier League gt Table Theme — gt_theme_pl","text":"","code":"gt_theme_pl(gt_object, ...)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_pl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Premier League gt Table Theme — gt_theme_pl","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_pl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Premier League gt Table Theme — gt_theme_pl","text":"Returns styled gt table","code":""},{"path":[]},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_savant.html","id":null,"dir":"Reference","previous_headings":"","what":"Baseball Savant gt Table Theme — gt_theme_savant","title":"Baseball Savant gt Table Theme — gt_theme_savant","text":"Apply Baseball Savant theme gt table","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_savant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baseball Savant gt Table Theme — gt_theme_savant","text":"","code":"gt_theme_savant(gt_object, ...)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_savant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Baseball Savant gt Table Theme — gt_theme_savant","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_savant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Baseball Savant gt Table Theme — gt_theme_savant","text":"Returns styled gt table","code":""},{"path":[]},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_sofa.html","id":null,"dir":"Reference","previous_headings":"","what":"Sofa Score gt Table Theme — gt_theme_sofa","title":"Sofa Score gt Table Theme — gt_theme_sofa","text":"Apply Sofa Score theme gt table","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_sofa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sofa Score gt Table Theme — gt_theme_sofa","text":"","code":"gt_theme_sofa(gt_object, style = \"light\", ...)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_sofa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sofa Score gt Table Theme — gt_theme_sofa","text":"gt_object existing gt table object class gt_tbl style Light (default, \"light\") Dark (\"dark\") table theme ... Optional additional arguments gt::table_options()","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_sofa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sofa Score gt Table Theme — gt_theme_sofa","text":"Returns styled gt table","code":""},{"path":[]},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_tier.html","id":null,"dir":"Reference","previous_headings":"","what":"Tier List gt Table Theme — gt_theme_tier","title":"Tier List gt Table Theme — gt_theme_tier","text":"Apply tier list theme gt table","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_tier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tier List gt Table Theme — gt_theme_tier","text":"","code":"gt_theme_tier(gt_object, style = \"dark\", ...)"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_tier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tier List gt Table Theme — gt_theme_tier","text":"gt_object existing gt table object class gt_tbl style Dark (default, \"dark\") Light (\"light\") table theme ... Optional additional arguments gt::table_options()","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_theme_tier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tier List gt Table Theme — gt_theme_tier","text":"Returns styled gt table","code":""},{"path":[]},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_tiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply tier-based background colors and bold styling to a gt table — gt_tiers","title":"Apply tier-based background colors and bold styling to a gt table — gt_tiers","text":"function applies background colors rows based tier levels bolds tier column gt table. iterates specified levels applies corresponding colors rows match tier. text color tier column determined using gt:::ideal_fgnd_color better contrast.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_tiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply tier-based background colors and bold styling to a gt table — gt_tiers","text":"","code":"gt_tiers(gt_object, levels, colors, style = \"dark\", img_height = \"55px\")"},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_tiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply tier-based background colors and bold styling to a gt table — gt_tiers","text":"gt_object gt table object modify. levels character vector specifying tier levels. match factor levels tier column table. colors character vector hex color codes corresponding tier levels. length colors must match length levels.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_tiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply tier-based background colors and bold styling to a gt table — gt_tiers","text":"Returns modified gt table tier-based background colors bold text applied.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/reference/gt_tiers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply tier-based background colors and bold styling to a gt table — gt_tiers","text":"function applies background colors based levels vector rows tier column matches level. also bolds text tier column clearer differentiation uses gt:::ideal_fgnd_color determine appropriate text color background.","code":""},{"path":"https://andreweatherman.github.io/gtUtils/news/index.html","id":"gtutils-010","dir":"Changelog","previous_headings":"","what":"gtUtils 0.1.0","title":"gtUtils 0.1.0","text":"Initial dev release September 13, 2024.","code":""}]
